/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
<<<<<<< HEAD
=======
// @ts-nocheck
>>>>>>> master

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Recipe, RecipeInterface } from "../Recipe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lendingRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pieRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bentoBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_masterContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_outputToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxInput",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
      {
        internalType: "uint16[]",
        name: "_dexIndex",
        type: "uint16[]",
      },
    ],
    name: "bake",
    outputs: [
      {
        internalType: "uint256",
        name: "inputAmountUsed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_assetIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "_assetOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_dexIndex",
        type: "uint16",
      },
    ],
    name: "dexSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pie",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pieAmount",
        type: "uint256",
      },
    ],
    name: "getPricePie",
    outputs: [
      {
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
      {
        internalType: "uint16[]",
        name: "dexIndex",
        type: "uint16[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "saveEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "saveToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_inputAsset",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_pool",
        type: "bytes32",
      },
    ],
    name: "setBalancerPoolMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_outputAsset",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_Fee",
        type: "uint16",
      },
    ],
    name: "setUniPoolMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pie",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint16[]",
        name: "_dexIndex",
        type: "uint16[]",
      },
    ],
    name: "toPie",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

export class Recipe__factory {
  static readonly abi = _abi;
  static createInterface(): RecipeInterface {
    return new utils.Interface(_abi) as RecipeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Recipe {
    return new Contract(address, _abi, signerOrProvider) as Recipe;
  }
}
